---
// Card.astro - Reusable card component for Work and Posts
// Card.astro - Updated card component supporting multiple props
// Accepts title (string), description/excerpt (string), tags (array of strings or single string),
// image or imageUrl (string), and href or link (string). Provides flexible fallback props
// so usage across various pages (work, blog, ventures) is consistent.

const {
  title,
  /**
   * Description or excerpt of the content. Accept either `description` or `excerpt`.
   */
  description,
  excerpt,
  /**
   * Single tag or array of tags to display as small chips.
   */
  tag,
  tags,
  /**
   * Link destination. Accept `href` or `link`.
   */
  href,
  link,
  /**
   * Image URL. Accept `image` or `imageUrl`.
   */
  image,
  imageUrl
} = Astro.props;

// Normalize props for internal use
const cardHref = href || link || '#';
const cardImage = image || imageUrl || null;
// Determine description text
const cardExcerpt = description || excerpt || '';
// Normalize tags into an array
let cardTags = [];
if (tags && Array.isArray(tags)) {
  cardTags = tags;
} else if (typeof tags === 'string') {
  cardTags = [tags];
} else if (typeof tag === 'string') {
  cardTags = [tag];
}
---

<article class="card-container">
  {cardImage && (
    <div class="card-image-container">
      <img src={cardImage} alt={title} class="card-image" loading="lazy" />
    </div>
  )}
  <div class="card-content">
    {cardTags.length > 0 && (
      <div class="card-tags">
        {cardTags.map(t => (
          <span class="card-tag">{t}</span>
        ))}
      </div>
    )}
    {title && (
      <h3 class="card-title">
        <a href={cardHref} class="card-link">{title}</a>
      </h3>
    )}
    {cardExcerpt && <p class="card-excerpt">{cardExcerpt}</p>}
  </div>
</article>

<style>
  .card-container {
    display: block;
    border: 1px solid #eaeaea;
    border-radius: 8px;
    overflow: hidden;
    text-decoration: none;
    color: inherit;
    transition: transform 0.2s, box-shadow 0.2s;
    height: 100%;
  }
  .card-container:hover {
    transform: translateY(-4px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }
  .card-image-container {
    height: 180px;
    overflow: hidden;
  }
  .card-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s;
  }
  .card-container:hover .card-image {
    transform: scale(1.05);
  }
  .card-content {
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }
  .card-tag {
    display: inline-block;
    padding: 0.25rem 0.5rem;
    background: #f0f0f0;
    border-radius: 4px;
    font-size: 0.7rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin-right: 0.25rem;
    margin-bottom: 0.25rem;
  }
  .card-title {
    margin: 0;
    font-size: 1.25rem;
  }
  .card-link {
    color: inherit;
    text-decoration: none;
  }
  .card-link:hover {
    text-decoration: underline;
  }
  .card-excerpt {
    margin: 0;
    color: #666;
    line-height: 1.5;
  }
</style>
